# Generated by Django 4.1.7 on 2023-06-15 00:00

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=200)),
                ('house', models.CharField(max_length=20)),
                ('section', models.CharField(max_length=200)),
                ('flat', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ContactData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Enter valid phone number.', regex='^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$')])),
                ('email', models.EmailField(max_length=254)),
                ('chatId', models.CharField(max_length=40, validators=[django.core.validators.MinLengthValidator(limit_value=6, message='ID should be at least 6 characters long.')])),
            ],
        ),
        migrations.CreateModel(
            name='MenuSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantMenuEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(limit_value=2, message='Name must be at least 2 characters long.')])),
                ('price', models.DecimalField(decimal_places=2, max_digits=19, validators=[django.core.validators.MinValueValidator(limit_value=0.0, message='Price cannot be negative.')])),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='RestaurantTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantTableProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property', models.IntegerField(choices=[(1, 'Near window'), (2, 'Near kitchen'), (3, 'In garden'), (4, 'In bar'), (5, 'Is isolated')])),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(limit_value=2, message='Name must be at least 2 characters long.')])),
                ('role', models.IntegerField(choices=[(1, 'Waiter'), (2, 'Dishwasher'), (3, 'Chef'), (4, 'Manager'), (5, 'Cleaner')])),
            ],
        ),
        migrations.CreateModel(
            name='StartEndHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='DishRestaurantMenuEntry',
            fields=[
                ('restaurantmenuentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='RMS.restaurantmenuentry')),
                ('stage', models.IntegerField(choices=[(1, 'Starter'), (2, 'Main course'), (3, 'Soup'), (4, 'Salad'), (5, 'Dessert')])),
                ('weight', models.DecimalField(decimal_places=3, max_digits=19, validators=[django.core.validators.MinValueValidator(limit_value=0.0, message='Weight cannot be negative.')])),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('RMS.restaurantmenuentry',),
        ),
        migrations.CreateModel(
            name='DrinkRestaurantMenuEntry',
            fields=[
                ('restaurantmenuentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='RMS.restaurantmenuentry')),
                ('contains_alcohol', models.BooleanField(default=False, verbose_name='Contains alcohol')),
                ('volume', models.DecimalField(decimal_places=4, max_digits=19, validators=[django.core.validators.MinValueValidator(limit_value=0.0, message='Volume cannot be negative.')])),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('RMS.restaurantmenuentry',),
        ),
        migrations.CreateModel(
            name='RestaurantTableBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('startEndHours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RMS.startendhours')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RMS.restauranttable')),
            ],
        ),
        migrations.AddField(
            model_name='restauranttable',
            name='properties',
            field=models.ManyToManyField(to='RMS.restauranttableproperty', verbose_name='list of properties'),
        ),
        migrations.CreateModel(
            name='RestaurantOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('customer_contact_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RMS.contactdata')),
                ('menu_selection', models.ManyToManyField(null=True, to='RMS.menuselection')),
            ],
        ),
        migrations.AddField(
            model_name='menuselection',
            name='menu_entry_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='RMS.restaurantmenuentry'),
        ),
    ]
